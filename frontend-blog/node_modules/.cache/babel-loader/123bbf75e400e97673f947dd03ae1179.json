{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  _s();\n\n  const [posts, setPosts] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  const [selected, setSelected] = useState('0');\n\n  const handleSelectChange = event => {\n    setSelected(event.target.value);\n  };\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, []);\n  console.log(\"select\" + selected);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selected, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__div_search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.__search,\n        type: \"search\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: styles.__select,\n        name: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          selected: true,\n          onChange: handleSelectChange,\n          children: \"Selecciona un tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), icons.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selected, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__container_postcardview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__postcardview_title_div,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.__postcardview_title,\n          children: \"Esta es la postcardview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: posts.map(item => selected == item.id ? /*#__PURE__*/_jsxDEV(Link, {\n          to: POSTBYID + item.id,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            icon: item.icon_id,\n            name: item.title,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcardView, \"BjyDw4eJZybg3oGWbD+81MRJ20g=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Navbar","styles","PostCard","Link","POST","POSTBYID","SearchBar","PostcardView","posts","setPosts","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","icons","setIcons","getIcons","selected","setSelected","handleSelectChange","event","target","value","__div_search","__search","__select","map","item","id","name","__container_postcardview","__postcardview_title_div","__postcardview_title","__main_postcardview","icon_id","title","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport {Link} from 'react-router-dom';\nimport {POST, POSTBYID} from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  const [posts, setPosts] = useState (['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers (),\n    };\n    fetch (url, options)\n      .then (response => {\n        if (response.status === 200) {\n          return response.json ();\n        }\n        return Promise.reject (response.status);\n      })\n      .then (function (myJson) {\n        setPosts (myJson);\n        console.log (posts);\n      })\n      .catch (error => console.log (error));\n  };\n\n  const [icons, setIcons] = useState (['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers (),\n    };\n    fetch (url, options)\n      .then (response => {\n        if (response.status === 200) {\n          return response.json ();\n        }\n        return Promise.reject (response.status);\n      })\n      .then (function (myJson) {\n        setIcons (myJson);\n      })\n      .catch (error => console.log (error));\n  };\n\n  const [selected, setSelected] = useState ('0');\n\n  const handleSelectChange = event => {\n    setSelected (event.target.value);\n  };\n\n  useEffect (() => {\n    getPost ();\n    getIcons ();\n  }, []);\n  console.log(\"select\"+selected)\n\n  return (\n    <div className=\"mt-5\">\n      <h3>{selected} </h3>\n      <div className={styles.__div_search}>\n        <input className={styles.__search} type=\"search\" name=\"search\" />\n        <select className={styles.__select} name=\"select\">\n          <option value=\"0\" selected onChange={handleSelectChange} >Selecciona un tipo</option>\n          {icons.map (item => (\n            <option value={item.id} >\n              {item.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <h3>{selected} </h3>\n\n      <div className={styles.__container_postcardview}>\n        <div className={styles.__postcardview_title_div}>\n          <h1 className={styles.__postcardview_title}>\n            Esta es la postcardview\n          </h1>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {posts.map (\n            item =>\n              selected == item.id\n                ? <Link to={POSTBYID + item.id}>\n                    <PostCard\n                      icon={item.icon_id}\n                      name={item.title}\n                      description={item.description}\n                    />\n                  </Link>\n                : <div />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}