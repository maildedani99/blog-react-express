{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/getlogo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport const GetLogo = props => {\n  _s();\n\n  const {\n    group,\n    width\n  } = props;\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n      console.log(icons);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getIcons();\n  }, []);\n  console.log(group);\n  return icons.map(item => {\n    group == icons.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        src: icons.url,\n        alt: \"hola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  });\n};\n\n_s(GetLogo, \"yEATomHrOAFVjGhPDez1zXEc3bU=\");\n\n_c = GetLogo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLogo\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/getlogo.js"],"names":["React","useState","useEffect","GetLogo","props","group","width","icons","setIcons","getIcons","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","map","item","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAG9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAGA,QAAMQ,QAAQ,GAAG,MAAM;AACnB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFG,KAAhB;AAIAC,IAAAA,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACKK,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACC,MAAxB,CAAP;AACH,KANL,EAOKF,IAPL,CAOU,UAAUM,MAAV,EAAkB;AACtBd,MAAAA,QAAQ,CAACc,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,KAVL,EAWKkB,KAXL,CAWWC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAXpB;AAYD,GAlBH;;AAoBExB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIFc,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AAEA,SACIE,KAAK,CAACoB,GAAN,CAAWC,IAAD,IACV;AACIvB,IAAAA,KAAK,IAAIE,KAAK,CAACsB,EAAf,gBACI;AAAA,6BACJ;AAAK,QAAA,KAAK,EAAEvB,KAAZ;AAAmB,QAAA,GAAG,EAAEC,KAAK,CAACG,GAA9B;AAAmC,QAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADJ,gBAMI;AAAA;AAAA;AAAA;AAAA,YANJ;AAQC,GAVL,CADJ;AAmBH,CArDM;;GAAMP,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nexport const GetLogo = (props) => {\n\n\n    const { group, width } = props;\n\n    const [icons, setIcons] = useState(['']);\n\n\n    const getIcons = () => {\n        const url = 'http://localhost/api/icons';\n        const options = {\n            method: 'GET',\n            headers: new Headers(),\n        };\n        fetch(url, options)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                }\n                return Promise.reject(response.status);\n            })\n            .then(function (myJson) {\n              setIcons(myJson);\n              console.log(icons);\n            })\n            .catch(error => console.log(error));\n      }\n    \n      useEffect(() => {\n        getIcons();\n      }, [])\n\n    console.log(group)\n    \n    return (\n        icons.map((item) => \n        {\n            group == icons.id ? (\n                <div>\n            <img width={width} src={icons.url} alt=\"hola\" />\n        </div>\n                )\n                :\n                <div></div>\n            \n            }\n            \n            \n            \n        )\n       \n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}