{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/logo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './logo.module.css';\nimport react from \"./assets/react.svg\";\nimport laravel from './assets/laravel.png';\nimport js from './assets/js.png';\nimport css from './assets/css.png';\nimport mysql from './assets/mysql.png';\nimport docker from './assets/docker.png';\nimport nodejs from './assets/nodejs.png';\n\nconst Logo = props => {\n  _s();\n\n  const {\n    ICON,\n    width\n  } = props;\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n      console.log(icons);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getIcons();\n  }, []);\n  const iconArray = [js, laravel, react, mysql, css, docker];\n  const big = \"styles.__img_post\";\n  const small = styles.__img_postcard;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: icons.map(item => {\n      item.id == group ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: width,\n        src: item.url,\n        alt: \"hola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Logo, \"yEATomHrOAFVjGhPDez1zXEc3bU=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/logo.js"],"names":["React","useState","useEffect","styles","laravel","js","css","mysql","docker","nodejs","Logo","props","ICON","width","icons","setIcons","getIcons","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","iconArray","react","big","small","__img_postcard","map","item","id","group"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEE,QAAMe,QAAQ,GAAG,MAAM;AACnB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFG,KAAhB;AAIAC,IAAAA,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACKK,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACC,MAAxB,CAAP;AACH,KANL,EAOKF,IAPL,CAOU,UAAUM,MAAV,EAAkB;AACtBd,MAAAA,QAAQ,CAACc,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,KAVL,EAWKkB,KAXL,CAWWC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAXpB;AAYD,GAlBH;;AAoBE/B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ;AACX,GAFU,EAER,EAFQ,CAAT;AAIF,QAAMkB,SAAS,GAAG,CAAC7B,EAAD,EAAKD,OAAL,EAAc+B,KAAd,EAAqB5B,KAArB,EAA4BD,GAA5B,EAAiCE,MAAjC,CAAlB;AACA,QAAM4B,GAAG,GAAG,mBAAZ;AACA,QAAMC,KAAK,GAAIlC,MAAM,CAACmC,cAAtB;AACA,sBAEE;AAAA,cAEExB,KAAK,CAACyB,GAAN,CAAWC,IAAD,IACT;AAACA,MAAAA,IAAI,CAACC,EAAL,IAAWC,KAAX,gBACA;AAAK,QAAA,KAAK,EAAE7B,KAAZ;AAAmB,QAAA,GAAG,EAAE2B,IAAI,CAACvB,GAA7B;AAAkC,QAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADA,gBAKI;AAAA;AAAA;AAAA;AAAA,cALJ;AAOD,KARD;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBH,CArDD;;GAAMP,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './logo.module.css';\n\nimport react from './assets/react.svg';\nimport laravel from './assets/laravel.png';\nimport js from './assets/js.png';\nimport css from './assets/css.png';\nimport mysql from './assets/mysql.png';\nimport docker from './assets/docker.png';\nimport nodejs from './assets/nodejs.png';\n\n\n\nconst Logo = (props) => {\n\n  const { ICON, width } = props;\n  \n  const [icons, setIcons] = useState(['']);\n\n    const getIcons = () => {\n        const url = 'http://localhost/api/icons';\n        const options = {\n            method: 'GET',\n            headers: new Headers(),\n        };\n        fetch(url, options)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                }\n                return Promise.reject(response.status);\n            })\n            .then(function (myJson) {\n              setIcons(myJson);\n              console.log(icons);\n            })\n            .catch(error => console.log(error));\n      }\n    \n      useEffect(() => {\n        getIcons();\n    }, [])\n\n    const iconArray = [js, laravel, react, mysql, css, docker];\n    const big = \"styles.__img_post\";\n    const small = (styles.__img_postcard);\n    return (\n      \n      <div>\n        {\n        icons.map((item) =>\n         {item.id == group ? (\n          <img width={width} src={item.url} alt=\"hola\" />\n          )\n          :\n          (\n              <div></div>\n          )\n        }\n        )\n        }\n                </div>\n            \n\n        )\n    \n}\nexport default Logo;"]},"metadata":{},"sourceType":"module"}