{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/logo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './logo.module.css';\nimport react from \"./assets/react.svg\";\nimport laravel from './assets/laravel.png';\nimport js from './assets/js.png';\nimport css from './assets/css.png';\nimport mysql from './assets/mysql.png';\nimport docker from './assets/docker.png';\nimport nodejs from './assets/nodejs.png';\n\nconst Logo = props => {\n  _s();\n\n  const {\n    icon,\n    width\n  } = props;\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getIcons();\n  }, []);\n  const iconArray = [js, laravel, react, mysql, css, docker];\n  const big = 'styles.__img_post';\n  const small = styles.__img_postcard;\n  console.log('hola' + icon);\n  return icons.map(item => item.id == icon ? /*#__PURE__*/_jsxDEV(\"img\", {\n    width: width,\n    src: item.url,\n    alt: \"hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this));\n};\n\n_s(Logo, \"yEATomHrOAFVjGhPDez1zXEc3bU=\");\n\n_c = Logo;\nexport default Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/components/logo/logo.js"],"names":["React","useState","useEffect","styles","laravel","js","css","mysql","docker","nodejs","Logo","props","icon","width","icons","setIcons","getIcons","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","catch","error","console","log","iconArray","react","big","small","__img_postcard","map","item","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBF,KAAtB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAE,CAAC,EAAD,CAAF,CAAlC;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACrB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFK,KAAhB;AAIAC,IAAAA,KAAK,CAAEL,GAAF,EAAOC,OAAP,CAAL,CACGK,IADH,CACSC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgBJ,QAAQ,CAACC,MAAzB,CAAP;AACD,KANH,EAOGF,IAPH,CAOS,UAAUM,MAAV,EAAkB;AACvBd,MAAAA,QAAQ,CAAEc,MAAF,CAAR;AACD,KATH,EAUGC,KAVH,CAUUC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAaF,KAAb,CAVnB;AAWD,GAjBD;;AAmBA7B,EAAAA,SAAS,CAAE,MAAM;AACfc,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMkB,SAAS,GAAG,CAAC7B,EAAD,EAAKD,OAAL,EAAc+B,KAAd,EAAqB5B,KAArB,EAA4BD,GAA5B,EAAiCE,MAAjC,CAAlB;AACA,QAAM4B,GAAG,GAAG,mBAAZ;AACA,QAAMC,KAAK,GAAGlC,MAAM,CAACmC,cAArB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,SAASrB,IAAtB;AACA,SAAOE,KAAK,CAACyB,GAAN,CACLC,IAAI,IACFA,IAAI,CAACC,EAAL,IAAW7B,IAAX,gBACI;AAAK,IAAA,KAAK,EAAEC,KAAZ;AAAmB,IAAA,GAAG,EAAE2B,IAAI,CAACvB,GAA7B;AAAkC,IAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,UADJ,gBAEI;AAAA;AAAA;AAAA;AAAA,UAJD,CAAP;AAMD,CAtCD;;GAAMP,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styles from './logo.module.css';\n\nimport react from './assets/react.svg';\nimport laravel from './assets/laravel.png';\nimport js from './assets/js.png';\nimport css from './assets/css.png';\nimport mysql from './assets/mysql.png';\nimport docker from './assets/docker.png';\nimport nodejs from './assets/nodejs.png';\n\nconst Logo = props => {\n  const {icon, width} = props;\n\n  const [icons, setIcons] = useState (['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers (),\n    };\n    fetch (url, options)\n      .then (response => {\n        if (response.status === 200) {\n          return response.json ();\n        }\n        return Promise.reject (response.status);\n      })\n      .then (function (myJson) {\n        setIcons (myJson);\n      })\n      .catch (error => console.log (error));\n  };\n\n  useEffect (() => {\n    getIcons ();\n  }, []);\n\n  const iconArray = [js, laravel, react, mysql, css, docker];\n  const big = 'styles.__img_post';\n  const small = styles.__img_postcard;\n  console.log ('hola' + icon);\n  return icons.map (\n    item =>\n      item.id == icon\n        ? <img width={width} src={item.url} alt=\"hola\" />\n        : <div />\n  );\n};\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}