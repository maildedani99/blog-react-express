{"ast":null,"code":"import _slicedToArray from\"/home/dani/Escritorio/Projects/blog-react-express/frontend-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState,Component,useContext}from'react';import Navbar from'../../components/navbar/navbar';import styles from'./postcardview.module.css';import PostCard from'../../components/postcard/postcard';import{Link}from'react-router-dom';import{POST,POSTBYID}from'../../routes/routes';import{PostsContext}from'../../contexts/postcontext';import Button from'../../components/button/button';import icon from'./assets/search.png';import'../postcardview/postcardview.css';var PostcardView=function PostcardView(){var _useContext=useContext(PostsContext),posts=_useContext.posts,icons=_useContext.icons,render=_useContext.render;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var handleSelectChange=function handleSelectChange(e){setSelected(e.target.value);};var handleSearchChange=function handleSearchChange(e){setSearch(e.target.value);};var resultArray=[''];var searchClick=function searchClick(){var result;console.log(search);posts.map(function(item){result=item.title.includes(search);if(result==true){resultArray.push(item);}console.log(resultArray);});};return/*#__PURE__*/_jsx(\"div\",{className:styles.__container_postcardview,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.__postcardview_div,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.__div_search,children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-control col-3 align-self-center mb-5\",onChange:handleSelectChange,children:[/*#__PURE__*/_jsx(\"option\",{className:styles.__option,label:\"Mostrar todo\",selected:true,value:\"0\"}),/*#__PURE__*/_jsx(\"hr\",{}),icons.map(function(item){return/*#__PURE__*/_jsx(\"option\",{className:styles.__option,value:item.id,label:item.name});})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.__main_postcardview,children:[posts.map(function(item){return item.icon_id==selected||selected==0?/*#__PURE__*/_jsx(Link,{to:POSTBYID+item.id,children:/*#__PURE__*/_jsx(PostCard,{icon:item.icon_id,title:item.title,description:item.description})}):/*#__PURE__*/_jsx(_Fragment,{});}),\";\"]})]})});};export default PostcardView;","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react-express/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Component","useContext","Navbar","styles","PostCard","Link","POST","POSTBYID","PostsContext","Button","icon","PostcardView","posts","icons","render","selected","setSelected","search","setSearch","handleSelectChange","e","target","value","handleSearchChange","resultArray","searchClick","result","console","log","map","item","title","includes","push","__container_postcardview","__postcardview_div","__div_search","__option","id","name","__main_postcardview","icon_id","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Component, useContext} from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport {Link} from 'react-router-dom';\nimport {POST, POSTBYID} from '../../routes/routes';\nimport { PostsContext } from '../../contexts/postcontext';\nimport Button from '../../components/button/button';\nimport icon from './assets/search.png';\nimport '../postcardview/postcardview.css';\n\nconst PostcardView = () => {\n\n  const { posts, icons, render } = useContext(PostsContext);\n  const [selected, setSelected] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  const handleSelectChange = (e) => {\n    setSelected(e.target.value);\n  };\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value)\n  }\nlet resultArray = ['']\n  const searchClick = () => {\n    let result;\n    console.log(search)\n    posts.map(item => {\n      result = item.title.includes(search);\n      if (result == true) {\n        resultArray.push(item);\n      }\n      console.log(resultArray);\n      })  \n  }\n\n\n  return (\n    <div className={styles.__container_postcardview}>\n   \n      <div className={styles.__postcardview_div}>\n        <div className={styles.__div_search}>\n           \n          {/* <input className=\" form-control\" type=\"text\" name=\"search\" placeholder=\"Busca lo que necesitas...\" onChange={handleSearchChange} />\n            <img className=\"input-icon\" src={icon} alt=\"icon\" onClick={searchClick} />     */}      \n            <select className=\"form-control col-3 align-self-center mb-5\" onChange={handleSelectChange}>\n            <option\n              className={styles.__option}\n              label=\"Mostrar todo\"\n              selected\n              value=\"0\"\n            />\n            <hr />\n            {icons.map((item) => (\n              <option\n                className={styles.__option}\n                value={item.id}\n                label={item.name}\n              />\n            ))}\n          </select>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {posts.map((item) =>\n            item.icon_id == selected || selected == 0 ? (\n              <Link to={POSTBYID + item.id}>\n                <PostCard\n                  icon={item.icon_id}\n                  title={item.title}\n                  description={item.description}\n                />\n              </Link>\n            ) : (\n              <></>\n            )\n          )}\n          ;\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}