{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  _s();\n\n  const [posts, setPosts] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  const [selected, setSelected] = useState(\"0\");\n\n  const handleSelectChange = e => {};\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__div_search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.__search,\n        type: \"search\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: styles.__select,\n        name: \"\",\n        id: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          name: \"todos\",\n          value: \"0\",\n          selected: true,\n          children: \"Selecciona un tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), icons.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          name: item.name,\n          value: item.id,\n          children: [\" \", item.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__container_postcardview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__postcardview_title_div,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.__postcardview_title,\n          children: \"Esta es la postcardview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: POSTBYID + item.id,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            icon: item.icon_id,\n            name: item.title,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcardView, \"wNyl4LdjGC6SVODo38mCRgsW8ms=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Navbar","styles","PostCard","Link","POST","POSTBYID","SearchBar","PostcardView","posts","setPosts","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","icons","setIcons","getIcons","selected","setSelected","handleSelectChange","e","__div_search","__search","__select","map","item","name","id","__container_postcardview","__postcardview_title_div","__postcardview_title","__main_postcardview","icon_id","title","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEA,QAAMW,OAAO,GAAG,MAAM;AACpB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFG,KAAhB;AAIAC,IAAAA,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACKK,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACC,MAAxB,CAAP;AACH,KANL,EAOKF,IAPL,CAOU,UAAUM,MAAV,EAAkB;AACtBd,MAAAA,QAAQ,CAACc,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,KAVL,EAWKkB,KAXL,CAWWC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAXpB;AAYD,GAlBD;;AAoBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEE,QAAM+B,QAAQ,GAAG,MAAM;AACnB,UAAMnB,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFK,KAAhB;AAIAC,IAAAA,KAAK,CAAEL,GAAF,EAAOC,OAAP,CAAL,CACGK,IADH,CACSC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgBJ,QAAQ,CAACC,MAAzB,CAAP;AACD,KANH,EAOGF,IAPH,CAOS,UAAUM,MAAV,EAAkB;AACvBM,MAAAA,QAAQ,CAAEN,MAAF,CAAR;AACD,KATH,EAUGG,KAVH,CAUUC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAaE,KAAb,CAVnB;AAWH,GAjBD;;AAmBF,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,GAAD,CAAxC;;AAEA,QAAMkC,kBAAkB,GAAIC,CAAD,IAAO,CAEjC,CAFD;;AAIApC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO;AACPoB,IAAAA,QAAQ;AACT,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAACkC,YAAvB;AAAA,8BACM;AAAQ,QAAA,SAAS,EAAElC,MAAM,CAACmC,QAA1B;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADN,eAEM;AAAS,QAAA,SAAS,EAAEnC,MAAM,CAACoC,QAA3B;AAAsC,QAAA,IAAI,EAAC,EAA3C;AAA8C,QAAA,EAAE,EAAC,EAAjD;AAAA,gCACF;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC,GAA3B;AAA+B,UAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,EAEKT,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACP;AAAQ,UAAA,IAAI,EAAEA,IAAI,CAACC,IAAnB;AAAyB,UAAA,KAAK,EAAED,IAAI,CAACE,EAArC;AAAA,0BAA2CF,IAAI,CAACC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACyC,wBAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEzC,MAAM,CAAC0C,wBAAvB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAE1C,MAAM,CAAC2C,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAE3C,MAAM,CAAC4C,mBAAvB;AAAA,kBAEIrC,KAAK,CAAC8B,GAAN,CAAWC,IAAD,iBAER,QAAC,IAAD;AAAM,UAAA,EAAE,EAAElC,QAAQ,GAAGkC,IAAI,CAACE,EAA1B;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEF,IAAI,CAACO,OAArB;AAA8B,YAAA,IAAI,EAAEP,IAAI,CAACQ,KAAzC;AAAgD,YAAA,WAAW,EAAER,IAAI,CAACS;AAAlE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAvFD;;GAAMzC,Y;;KAAAA,Y;AAyFN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\n\n\nconst PostcardView = () => {\n\n  const [posts, setPosts] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n        method: 'GET',\n        headers: new Headers(),\n    };\n    fetch(url, options)\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            }\n            return Promise.reject(response.status);\n        })\n        .then(function (myJson) {\n          setPosts(myJson);\n          console.log(posts);\n        })\n        .catch(error => console.log(error));\n  }\n\n  const [icons, setIcons] = useState(['']);\n\n    const getIcons = () => {\n        const url = 'http://localhost/api/icons';\n        const options = {\n          method: 'GET',\n          headers: new Headers (),\n        };\n        fetch (url, options)\n          .then (response => {\n            if (response.status === 200) {\n              return response.json ();\n            }\n            return Promise.reject (response.status);\n          })\n          .then (function (myJson) {\n            setIcons (myJson);\n          })\n          .catch (error => console.log (error));\n    };\n  \n  const [selected, setSelected] = useState(\"0\");\n\n  const handleSelectChange = (e) => {\n\n  }\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, [])\n\n  return (\n    <div className=\"mt-5\">\n      \n      <div className={styles.__div_search}>\n            <input  className={styles.__search} type=\"search\" name=\"search\" />\n            <select  className={styles.__select}  name=\"\" id=\"\">\n          <option name=\"todos\" value=\"0\" selected>Selecciona un tipo</option>\n                {icons.map((item) => \n                    <option name={item.name} value={item.id}> {item.name} </option>\n                )}\n            </select>\n            </div>\n\n      <div className={styles.__container_postcardview}>\n        <div className={styles.__postcardview_title_div}>\n          <h1 className={styles.__postcardview_title}>Esta es la postcardview</h1>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {\n            posts.map((item) => \n            \n              <Link to={POSTBYID + item.id}>\n                <PostCard icon={item.icon_id} name={item.title} description={item.description} />\n              </Link>\n            \n              )\n            }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}