{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST } from '../../routes/routes';\nimport react from \"../../components/postcard/assets/react.svg\";\nimport laravel from '../../components/postcard/assets/laravel.png';\nimport js from '../../components/postcard/assets/js.png';\nimport css from '../../components/postcard/assets/css.png';\nimport docker from '../../components/postcard/assets/docker.png';\nimport php from '../../components/postcard/assets/php.png';\n\nconst PostcardView = () => {\n  _s();\n\n  const [posts, setPosts] = useState(['']);\n  const [icon, setIcon] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const getIcon = id => {\n    const url = `http://localhost/api/icons/${id}`;\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcon(myJson);\n      console.log(icon);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getPost();\n    getIcon(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__container_postcardview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__postcardview_title_div,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.__postcardview_title,\n          children: \"Esta es la postcardview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: icon.map(item => {\n          /* getIcon({item.icon_id}) */\n\n          /*#__PURE__*/\n          _jsxDEV(Link, {\n            to: POST,\n            children: /*#__PURE__*/_jsxDEV(PostCard, {\n              type: laravel,\n              name: item.title,\n              description: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostcardView, \"eRIXJVTJY/ESHg7rbMq6cbeCNWs=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Navbar","styles","PostCard","Link","POST","laravel","js","css","docker","php","PostcardView","posts","setPosts","icon","setIcon","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","getIcon","id","__container_postcardview","__postcardview_title_div","__postcardview_title","__main_postcardview","map","item","title","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST } from '../../routes/routes';\nimport react from '../../components/postcard/assets/react.svg';\nimport laravel from '../../components/postcard/assets/laravel.png';\nimport js from '../../components/postcard/assets/js.png';\nimport css from '../../components/postcard/assets/css.png';\nimport docker from '../../components/postcard/assets/docker.png';\nimport php from '../../components/postcard/assets/php.png';\n\nconst PostcardView = () => {\n\n  const [posts, setPosts] = useState(['']);\n  const [icon, setIcon] = useState(['']);\n\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n        method: 'GET',\n        headers: new Headers(),\n    };\n    fetch(url, options)\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            }\n            return Promise.reject(response.status);\n        })\n        .then(function (myJson) {\n          setPosts(myJson);\n          console.log(posts);\n        })\n        .catch(error => console.log(error));\n  }\n\n  const getIcon = (id) => {\n    const url = `http://localhost/api/icons/${id}`;\n    const options = {\n        method: 'GET',\n        headers: new Headers(),\n    };\n    fetch(url, options)\n        .then(response => {\n            if (response.status === 200) {\n                return response.json();\n            }\n            return Promise.reject(response.status);\n        })\n        .then(function (myJson) {\n          setIcon(myJson);\n          console.log(icon);\n        })\n        .catch(error => console.log(error));\n  }\n  \n\n  useEffect(() => {\n    getPost();\n    getIcon(1);\n    \n  }, [])\n  \n\n  return (\n    <>\n      <Navbar />\n      <div className={styles.__container_postcardview}>\n        <div className={styles.__postcardview_title_div}>\n          <h1 className={styles.__postcardview_title}>Esta es la postcardview</h1>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {icon.map((item) => {\n           \n            /* getIcon({item.icon_id}) */\n            <Link to={POST}>\n              <PostCard type={laravel} name={item.title} description={item.description} />\n            </Link>\n          }\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}