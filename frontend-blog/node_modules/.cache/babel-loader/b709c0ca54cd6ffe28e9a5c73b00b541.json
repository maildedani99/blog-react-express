{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  _s();\n\n  const [icons, setIcons] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getIcons();\n  }, []);\n  const [option, setOption] = useState();\n\n  const handleSelectChange = event => {\n    setOption(event.target.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__div_search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.__search,\n        type: \"search\",\n        name: \"search\",\n        placeholder: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: styles.__select,\n        onChange: handleSelectChange,\n        name: \"\",\n        id: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          children: \"Selecciona un tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), icons.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", item.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__container_postcardview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__postcardview_title_div,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.__postcardview_title,\n          children: \"Esta es la postcardview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: POSTBYID + item.id,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            icon: item.icon_id,\n            name: item.title,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcardView, \"mIC/1KIGFiChBdM/AGWKoXM9G7g=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Navbar","styles","PostCard","Link","POST","POSTBYID","SearchBar","PostcardView","icons","setIcons","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","posts","catch","error","getIcons","option","setOption","handleSelectChange","event","target","id","__div_search","__search","__select","map","item","name","__container_postcardview","__postcardview_title_div","__postcardview_title","__main_postcardview","icon_id","title","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEA,QAAMW,OAAO,GAAG,MAAM;AACpB,UAAMC,GAAG,GAAG,4BAAZ;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFK,KAAhB;AAIAC,IAAAA,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACGK,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACC,MAAxB,CAAP;AACD,KANH,EAOGF,IAPH,CAOQ,UAAUM,MAAV,EAAkB;AACtBd,MAAAA,QAAQ,CAACc,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAXpB;AAYD,GAlBD;;AAoBA9B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,EAApC;;AAEE,QAAMiC,kBAAkB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAT;AACH,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAElC,MAAM,CAACmC,YAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEnC,MAAM,CAACoC,QADpB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAEpC,MAAM,CAACqC,QAA1B;AAAoC,QAAA,QAAQ,EAAEN,kBAA9C;AAAoE,QAAA,IAAI,EAAC,EAAzE;AAA4E,QAAA,EAAE,EAAC,EAA/E;AAAA,gCACE;AAAQ,UAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGxB,KAAK,CAAC+B,GAAN,CAAWC,IAAD,iBACT;AAAA,0BAAUA,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACyC,wBAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEzC,MAAM,CAAC0C,wBAAvB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAE1C,MAAM,CAAC2C,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAE3C,MAAM,CAAC4C,mBAAvB;AAAA,kBACGnB,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEnC,QAAQ,GAAGmC,IAAI,CAACL,EAA1B;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,IAAI,EAAEK,IAAI,CAACM,OADb;AAEE,YAAA,IAAI,EAAEN,IAAI,CAACO,KAFb;AAGE,YAAA,WAAW,EAAEP,IAAI,CAACQ;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAxED;;GAAMzC,Y;;KAAAA,Y;AA0EN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport {Link} from 'react-router-dom';\nimport {POST, POSTBYID} from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  const [icons, setIcons] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers(),\n    };\n    fetch(url, options)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        return Promise.reject(response.status);\n      })\n      .then(function (myJson) {\n        setIcons(myJson);\n        console.log(posts);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getIcons();\n  }, []);\n\n\n  const [option, setOption] = useState();\n    \n    const handleSelectChange = (event) => {\n        setOption(event.target.id);\n    }\n\n  return (\n    <div className=\"mt-5\">\n\n      <div className={styles.__div_search}>\n        <input\n          className={styles.__search}\n          type=\"search\"\n          name=\"search\"\n          placeholder=\"Buscar\"\n        />\n        <select className={styles.__select} onChange={handleSelectChange  } name=\"\" id=\"\">\n          <option selected>Selecciona un tipo</option>\n          {icons.map((item) => (\n            <option> {item.name} </option>\n          ))}\n        </select>\n      </div>\n\n      <div className={styles.__container_postcardview}>\n        <div className={styles.__postcardview_title_div}>\n          <h1 className={styles.__postcardview_title}>\n            Esta es la postcardview\n          </h1>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {posts.map((item) => (\n            <Link to={POSTBYID + item.id}>\n              <PostCard\n                icon={item.icon_id}\n                name={item.title}\n                description={item.description}\n              />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}