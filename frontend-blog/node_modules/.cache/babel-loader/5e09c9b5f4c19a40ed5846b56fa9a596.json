{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/contexts/postcontext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nconst PostsContext = /*#__PURE__*/createContext();\nlet {\n  Provider,\n  Consumer,\n  posts,\n  SetPosts,\n  icons,\n  render,\n  setRender,\n  getPosts\n} = PostsContext;\n\nconst PostsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState(['']);\n  const [icons, setIcons] = useState(['']);\n  const [post, setPost] = useState({});\n  const [render, setRender] = useState(false);\n\n  const getPosts = () => {\n    const url = 'http://localhost:8000/posts';\n    const options = {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const getIcons = () => {\n    const url = 'http://localhost:8000/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  const getPost = id => {\n    posts.map(item => {\n      if (item.id == id) {\n        setPost(item);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getPosts();\n    getIcons();\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      posts,\n      setPosts,\n      icons,\n      render,\n      setRender,\n      post,\n      getPosts,\n      getPost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsProvider, \"cRxrvYn6o42PhiHjyFFGPvmmZbs=\");\n\n_c = PostsProvider;\nexport { PostsProvider, Consumer as PostsConsumer, PostsContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsProvider\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/contexts/postcontext.js"],"names":["React","createContext","useEffect","useState","PostsContext","Provider","Consumer","posts","SetPosts","icons","render","setRender","getPosts","PostsProvider","children","setPosts","setIcons","post","setPost","url","options","method","mode","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","getIcons","getPost","id","map","item","PostsConsumer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,IAAI;AAAEI,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA,KAAvC;AAA8CC,EAAAA,MAA9C;AAAsDC,EAAAA,SAAtD;AAAiEC,EAAAA;AAAjE,IAA8ER,YAAlF;;AAEA,MAAMS,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEpC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBZ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQO,QAAR,IAAoBb,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACrB,UAAMO,GAAG,GAAG,6BAAZ;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,IAAI,EAAE,SAFQ;AAGdC,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAHK,KAAhB;AAKAC,IAAAA,KAAK,CAAEN,GAAF,EAAOC,OAAP,CAAL,CACGM,IADH,CACSC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgBJ,QAAQ,CAACC,MAAzB,CAAP;AACD,KANH,EAOKF,IAPL,CAOU,UAASM,MAAT,EAAiB;AACrBjB,MAAAA,QAAQ,CAACiB,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACH,KAVH,EAWG4B,KAXH,CAWUC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAaE,KAAb,CAXnB;AAYD,GAnBD;;AAsBA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMlB,GAAG,GAAG,iCAAZ;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdE,MAAAA,OAAO,EAAE,IAAIC,OAAJ;AAFK,KAAhB;AAIAC,IAAAA,KAAK,CAAEN,GAAF,EAAOC,OAAP,CAAL,CACGM,IADH,CACSC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgBJ,QAAQ,CAACC,MAAzB,CAAP;AACD,KANH,EAOGF,IAPH,CAOS,UAAUM,MAAV,EAAkB;AACvBhB,MAAAA,QAAQ,CAAEgB,MAAF,CAAR;AACD,KATH,EAUGG,KAVH,CAUUC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAaE,KAAb,CAVnB;AAWH,GAjBD;;AAmBA,QAAME,OAAO,GAAIC,EAAD,IAAQ;AACpBhC,IAAAA,KAAK,CAACiC,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACF,EAAL,IAAWA,EAAf,EAAmB;AACfrB,QAAAA,OAAO,CAACuB,IAAD,CAAP;AACH;AACF,KAJD;AAMH,GAPD;;AAUAvC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ;AACRyB,IAAAA,QAAQ;AACX,GAHQ,EAGN,CAAC3B,MAAD,CAHM,CAAT;AAMA,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAG;AAAEH,MAAAA,KAAF;AAASQ,MAAAA,QAAT;AAAmBN,MAAAA,KAAnB;AAA0BC,MAAAA,MAA1B;AAAkCC,MAAAA,SAAlC;AAA6CM,MAAAA,IAA7C;AAAmDL,MAAAA,QAAnD;AAA6D0B,MAAAA;AAA7D,KAAlB;AAAA,cACKxB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxED;;GAAMD,a;;KAAAA,a;AAyEN,SAASA,aAAT,EAAwBP,QAAQ,IAAIoC,aAApC,EAAmDtC,YAAnD","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\nconst PostsContext = createContext();\nlet { Provider, Consumer, posts, SetPosts, icons, render, setRender, getPosts } = PostsContext;\n\nconst PostsProvider = ({ children }) => {   \n    \n    const [posts, setPosts] = useState(['']);\n    const [icons, setIcons] = useState(['']);\n    const [post, setPost] = useState({});\n\n    const [render, setRender] = useState(false);\n\n    const getPosts = () => {\n      const url = 'http://localhost:8000/posts';\n      const options = {\n        method: 'GET',\n        mode: 'no-cors',\n        headers: new Headers (),\n      };\n      fetch (url, options)\n        .then (response => {\n          if (response.status === 200) {\n            return response.json ();\n          }\n          return Promise.reject (response.status);\n        })\n          .then(function(myJson) {\n            setPosts(myJson)    \n            console.log(posts)\n        })\n        .catch (error => console.log (error));\n    };\n\n\n    const getIcons = () => {\n        const url = 'http://localhost:8000/api/icons';\n        const options = {\n          method: 'GET',\n          headers: new Headers (),\n        };\n        fetch (url, options)\n          .then (response => {\n            if (response.status === 200) {\n              return response.json ();\n            }\n            return Promise.reject (response.status);\n          })\n          .then (function (myJson) {\n            setIcons (myJson);\n          })\n          .catch (error => console.log (error));\n    };\n    \n    const getPost = (id) => {\n        posts.map(item => { \n          if (item.id == id) {\n              setPost(item);\n          }\n        }\n        )\n    }\n  \n\n    useEffect(() => {\n        getPosts();\n        getIcons();\n    }, [render]);\n        \n\n    return (\n        <Provider value={ { posts, setPosts, icons, render, setRender, post, getPosts, getPost } } >\n            {children}\n        </Provider>\n    )\n\n\n}\nexport { PostsProvider, Consumer as PostsConsumer, PostsContext }\n\n"]},"metadata":{},"sourceType":"module"}