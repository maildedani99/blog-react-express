{"ast":null,"code":"import _slicedToArray from\"/home/dani/Escritorio/Projects/blog-react-express/frontend-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{createContext,useEffect,useState}from'react';var PostsContext=/*#__PURE__*/createContext();var Provider=PostsContext.Provider,Consumer=PostsContext.Consumer,posts=PostsContext.posts,SetPosts=PostsContext.SetPosts,icons=PostsContext.icons,render=PostsContext.render,setRender=PostsContext.setRender,getPosts=PostsContext.getPosts;var PostsProvider=function PostsProvider(_ref){var children=_ref.children;var _useState=useState(['']),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(['']),_useState4=_slicedToArray(_useState3,2),icons=_useState4[0],setIcons=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),post=_useState6[0],setPost=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),render=_useState8[0],setRender=_useState8[1];var getPosts=function getPosts(){var url='https://safe-woodland-96010.herokuapp.com/api/posts';var options={method:'GET',mode:'cors',headers:new Headers()};fetch(url,options).then(function(response){if(response.status===200){return response.json();}return Promise.reject(response.status);}).then(function(myJson){setPosts(myJson);console.log(posts);}).catch(function(error){return console.log(error);});};var getIcons=function getIcons(){var url='https://safe-woodland-96010.herokuapp.com/api/icons';var options={method:'GET',mode:'cors',headers:new Headers()};fetch(url,options).then(function(response){if(response.status===200){return response.json();}return Promise.reject(response.status);}).then(function(myJson){setIcons(myJson);}).catch(function(error){return console.log(error);});};var getPost=function getPost(id){posts.map(function(item){if(item.id==id){setPost(item);}});};useEffect(function(){getPosts();getIcons();},[render]);return/*#__PURE__*/_jsx(Provider,{value:{posts:posts,setPosts:setPosts,icons:icons,render:render,setRender:setRender,post:post,getPosts:getPosts,getPost:getPost},children:children});};export{PostsProvider,Consumer as PostsConsumer,PostsContext};","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react-express/frontend-blog/src/contexts/postcontext.js"],"names":["React","createContext","useEffect","useState","PostsContext","Provider","Consumer","posts","SetPosts","icons","render","setRender","getPosts","PostsProvider","children","setPosts","setIcons","post","setPost","url","options","method","mode","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","getIcons","getPost","id","map","item","PostsConsumer"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\nconst PostsContext = createContext();\nlet { Provider, Consumer, posts, SetPosts, icons, render, setRender, getPosts } = PostsContext;\n\nconst PostsProvider = ({ children }) => {   \n    \n    const [posts, setPosts] = useState(['']);\n    const [icons, setIcons] = useState(['']);\n    const [post, setPost] = useState({});\n\n    const [render, setRender] = useState(false);\n\n    const getPosts = () => {\n      const url = 'https://safe-woodland-96010.herokuapp.com/api/posts';\n      const options = {\n        method: 'GET',\n        mode:'cors',\n\n        headers: new Headers (),\n      };\n      fetch (url, options)\n        .then (response => {\n          if (response.status === 200) {\n            return response.json ();\n          }\n          return Promise.reject (response.status);\n        })\n          .then(function(myJson) {\n            setPosts(myJson)    \n            console.log(posts)\n        })\n        .catch (error => console.log (error));\n    };\n\n\n    const getIcons = () => {\n        const url = 'https://safe-woodland-96010.herokuapp.com/api/icons';\n        const options = {\n          method: 'GET',\n        mode:'cors',\n\n          headers: new Headers (),\n        };\n        fetch (url, options)\n          .then (response => {\n            if (response.status === 200) {\n              return response.json ();\n            }\n            return Promise.reject (response.status);\n          })\n          .then (function (myJson) {\n            setIcons (myJson);\n          })\n          .catch (error => console.log (error));\n    };\n    \n    const getPost = (id) => {\n        posts.map(item => { \n          if (item.id == id) {\n              setPost(item);\n          }\n        }\n        )\n    }\n  \n\n    useEffect(() => {\n        getPosts();\n        getIcons();\n    }, [render]);\n        \n\n    return (\n        <Provider value={ { posts, setPosts, icons, render, setRender, post, getPosts, getPost } } >\n            {children}\n        </Provider>\n    )\n\n\n}\nexport { PostsProvider, Consumer as PostsConsumer, PostsContext }\n\n"]},"metadata":{},"sourceType":"module"}