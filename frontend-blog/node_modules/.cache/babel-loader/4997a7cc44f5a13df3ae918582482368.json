{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\n\nconst PostcardView = () => {\n  _s();\n\n  const [posts, setPosts] = useState(['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const [icons, setIcons] = useState(['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  const [selected, setSelected] = useState(0);\n\n  const handleSelectChange = e => {\n    setSelected(e.target.value);\n  };\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, []);\n  console.log(\"select\" + selected);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selected, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__div_search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.__search,\n        type: \"search\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-filled-label\",\n        id: \"demo-simple-select-filled\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"form-control form-control-lg\",\n          value: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), icons.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"form-control form-control-lg\",\n          value: \"0\",\n          value: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selected, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__container_postcardview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__postcardview_title_div,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.__postcardview_title,\n          children: \"Esta es la postcardview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: posts.map(item => item.icon_id == selected || selected == 0 ? /*#__PURE__*/_jsxDEV(Link, {\n          to: POSTBYID + item.id,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            icon: item.icon_id,\n            name: item.title,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcardView, \"3EcmY3bD4w6wv9wHIpkgEiHFdlk=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Navbar","styles","PostCard","Link","POST","POSTBYID","SearchBar","makeStyles","Select","PostcardView","posts","setPosts","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","icons","setIcons","getIcons","selected","setSelected","handleSelectChange","e","target","value","__div_search","__search","handleChange","map","item","id","name","__container_postcardview","__postcardview_title_div","__postcardview_title","__main_postcardview","icon_id","title","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport {Link} from 'react-router-dom';\nimport {POST, POSTBYID} from '../../routes/routes';\nimport SearchBar from '../../components/searchBar/searchbar';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst PostcardView = () => {\n  const [posts, setPosts] = useState (['']);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers (),\n    };\n    fetch (url, options)\n      .then (response => {\n        if (response.status === 200) {\n          return response.json ();\n        }\n        return Promise.reject (response.status);\n      })\n      .then (function (myJson) {\n        setPosts (myJson);\n        console.log (posts);\n      })\n      .catch (error => console.log (error));\n  };\n\n  const [icons, setIcons] = useState (['']);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers (),\n    };\n    fetch (url, options)\n      .then (response => {\n        if (response.status === 200) {\n          return response.json ();\n        }\n        return Promise.reject (response.status);\n      })\n      .then (function (myJson) {\n        setIcons (myJson);\n      })\n      .catch (error => console.log (error));\n  };\n\n  const [selected, setSelected] = useState (0);\n\n  const handleSelectChange = e => {\n    setSelected(e.target.value);\n  };\n\n  useEffect (() => {\n    getPost ();\n    getIcons ();\n  }, []);\n  console.log(\"select\"+selected)\n\n  return (\n    <div className=\"mt-5\">\n      <h3>{selected} </h3>\n      <div className={styles.__div_search}>\n        <input className={styles.__search} type=\"search\" name=\"search\" />\n        <Select\n          labelId=\"demo-simple-select-filled-label\"\n          id=\"demo-simple-select-filled\"\n          \n          onChange={handleChange}\n        >\n          <option  className=\"form-control form-control-lg\" value=\"0\"   ></option>\n          {icons.map (item => (\n            <option className=\"form-control form-control-lg\" value=\"0\" value={item.id} >\n              {item.name}\n            </option>\n          ))}\n        </Select>\n      </div>\n      <h3>{selected} </h3>\n\n      <div className={styles.__container_postcardview}>\n        <div className={styles.__postcardview_title_div}>\n          <h1 className={styles.__postcardview_title}>\n            Esta es la postcardview\n          </h1>\n        </div>\n        <div className={styles.__main_postcardview}>\n          {posts.map (\n            item =>\n             item.icon_id == selected || selected == 0 ?\n              <Link to={POSTBYID + item.id}>\n                    <PostCard\n                      icon={item.icon_id}\n                      name={item.title}\n                      description={item.description}\n                    />\n                </Link>\n                :<></>\n             \n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}