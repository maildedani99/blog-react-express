{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport { Link } from 'react-router-dom';\nimport { POST, POSTBYID } from '../../routes/routes';\nimport searchIcon from './assets/search.png';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setPosts(myJson);\n      console.log(posts);\n    }).catch(error => console.log(error));\n  };\n\n  const [icons, setIcons] = useState([]);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers()\n    };\n    fetch(url, options).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return Promise.reject(response.status);\n    }).then(function (myJson) {\n      setIcons(myJson);\n    }).catch(error => console.log(error));\n  };\n\n  const [selected, setSelected] = useState(0);\n  const [search, setSearch] = useState(); //const [searchRun, SetSearchRun] = useState(false);\n\n  /* const searchGet = () => {\n    SetSearchRun(true)\n          \n  } */\n\n  const handleSelectChange = e => {\n    setSelected(e.target.value);\n  };\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.__container_postcardview,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__postcardview_title_div,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.__postcardview_title,\n        children: \"Esta es la postcardview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.__postcardview_div,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__div_search,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.__search_bar,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.__search,\n            type: \"search\",\n            name: \"search\",\n            placeholder: \"Search...\",\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.__search_button,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: searchIcon,\n              className: styles.__search_icon,\n              alt: \"icono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.__select,\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: styles.__option,\n            label: \"Mostrar todo\",\n            selected: true,\n            value: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), icons.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: styles.__option,\n            value: item.id,\n            label: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.__main_postcardview,\n        children: search && posts.map(item => item.name.include(\"search\") ? /*#__PURE__*/_jsxDEV(Link, {\n          to: POSTBYID + item.id,\n          children: /*#__PURE__*/_jsxDEV(PostCard, {\n            icon: item.icon_id,\n            name: item.title,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostcardView, \"AF2r6N6XFMuKQ4TBGsyLcSEtIx4=\");\n\n_c = PostcardView;\nexport default PostcardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcardView\");","map":{"version":3,"sources":["/home/dani/Escritorio/Projects/blog-react/frontend-blog/src/pages/postcardview/postcardview.js"],"names":["React","useEffect","useState","Component","Navbar","styles","PostCard","Link","POST","POSTBYID","searchIcon","SearchBar","PostcardView","posts","setPosts","getPost","url","options","method","headers","Headers","fetch","then","response","status","json","Promise","reject","myJson","console","log","catch","error","icons","setIcons","getIcons","selected","setSelected","search","setSearch","handleSelectChange","e","target","value","handleSearchChange","__container_postcardview","__postcardview_title_div","__postcardview_title","__postcardview_div","__div_search","__search_bar","__search","__search_button","__search_icon","__select","__option","map","item","id","name","__main_postcardview","include","icon_id","title","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Component} from 'react';\nimport Navbar from '../../components/navbar/navbar';\nimport styles from './postcardview.module.css';\nimport PostCard from '../../components/postcard/postcard';\nimport {Link} from 'react-router-dom';\nimport {POST, POSTBYID} from '../../routes/routes';\nimport searchIcon from './assets/search.png';\nimport SearchBar from '../../components/searchBar/searchbar';\n\nconst PostcardView = () => {\n  const [posts, setPosts] = useState([]);\n\n  const getPost = () => {\n    const url = 'http://localhost/api/posts';\n    const options = {\n      method: 'GET',\n      headers: new Headers(),\n    };\n    fetch(url, options)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        return Promise.reject(response.status);\n      })\n      .then(function (myJson) {\n        setPosts(myJson);\n        console.log(posts);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const [icons, setIcons] = useState([]);\n\n  const getIcons = () => {\n    const url = 'http://localhost/api/icons';\n    const options = {\n      method: 'GET',\n      headers: new Headers(),\n    };\n    fetch(url, options)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        return Promise.reject(response.status);\n      })\n      .then(function (myJson) {\n        setIcons(myJson);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n  const [selected, setSelected] = useState(0);\n  const [search, setSearch] = useState();\n  //const [searchRun, SetSearchRun] = useState(false);\n\n  /* const searchGet = () => {\n    SetSearchRun(true)\n          \n  } */\n\n  const handleSelectChange = (e) => {\n    setSelected(e.target.value);\n  };\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  useEffect(() => {\n    getPost();\n    getIcons();\n  }, []);\n\n  return (\n    <div className={styles.__container_postcardview}>\n      <div className={styles.__postcardview_title_div}>\n        <h1 className={styles.__postcardview_title}>Esta es la postcardview</h1>\n      </div>\n      <div className={styles.__postcardview_div}>\n        <div className={styles.__div_search}>\n          <div className={styles.__search_bar}>\n            <input\n              className={styles.__search}\n              type=\"search\"\n              name=\"search\"\n              placeholder=\"Search...\"\n              onChange={handleSearchChange}\n            />\n            <button className={styles.__search_button}>\n              <img\n                src={searchIcon}\n                className={styles.__search_icon}\n                alt=\"icono\"\n              />\n            </button>\n          </div>\n          <select className={styles.__select} onChange={handleSelectChange}>\n            <option\n              className={styles.__option}\n              label=\"Mostrar todo\"\n              selected\n              value=\"0\"\n            />\n            <hr />\n            {icons.map((item) => (\n              <option\n                className={styles.__option}\n                value={item.id}\n                label={item.name}\n              />\n            ))}\n          </select>\n        </div>\n\n\n        <div className={styles.__main_postcardview}>\n          {search && posts.map((item) =>\n            item.name.include(\"search\") ? (\n              <Link to={POSTBYID + item.id}>\n                <PostCard\n                  icon={item.icon_id}\n                  name={item.title}\n                  description={item.description}\n                />\n              </Link>)\n              :\n              <></>\n              )}\n          \n              \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostcardView;\n"]},"metadata":{},"sourceType":"module"}